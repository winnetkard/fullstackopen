import React, { useState, useEffect } from 'react'
import PersonForm from './components/PersonForm'
import Persons from './components/Persons'
import Filter from './components/Filter'
import noteService from './services/notes'
import './index.css'

const App = () => {
  const [ persons, setPersons ] = useState([]) 
  const [ newName, setNewName ] = useState('')
  const [ newNumber, setNewNumber ] = useState('')
  const [ newFilter, setNewFilter ] = useState('')
  const [errorMessage, setErrorMessage] = useState('')

  useEffect(() => {
    noteService
      .getAll()
      .then(initialPersons => {
        setPersons(initialPersons)
      })
  }, [])

  const addName = (event) => {
    event.preventDefault()
    const nameObject = {
      name: newName,
      number: newNumber,  
      key: newName + newNumber
    }
    if (persons.some(person=> person.name.toLowerCase() === nameObject.name.toLowerCase())) {
      window.alert(`${newName} is already added to phonebook`)
    }
    else{
      noteService
      .create(nameObject)
      .then(returnedName => {
        setPersons(persons.concat(returnedName))
        setNewName('')
        setErrorMessage(`Added ${returnedName.name}`)
      })
    }
  }

  const Footer = () => {
    const footerStyle = {
      color: 'green',
      fontStyle: 'italic',
      fontSize: 16
    }
    return (
      <div style={footerStyle}>
        <br />
        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>
      </div>
    )
  }

  const deleteName = (value) => {
      noteService
      .deleteName(value)
    noteService
      .getAll()
      .then(initialPersons => {
        setPersons(initialPersons)
      })
    }

  const handleNameChange = (event) => {
    setNewName(event.target.value)
  }

  const handleNumberChange = (event) => {
    setNewNumber(event.target.value)
  }

  const handleFilterChange = (event) => {
    setNewFilter(event.target.value)
  }

  const Notification = ({message}) => {
    if (message === null) {
      return null
    }
    return (
      <div className = "error">
        {message}
      </div>
    )
  }

  const filterToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))

  return (
    <div>
      <h1>Notes</h1>
      <Notification message = {errorMessage} />
      <h2>Phonebook</h2>
      <Filter filter ={newFilter} filterHandler={handleFilterChange} />
      <h1>add a new</h1>
      <PersonForm onSubmit = {addName} nameValue = {newName} nameOnChange = {handleNameChange} numberValue = {newNumber} numberOnChange = {handleNumberChange}/>
      <h2>Numbers</h2>
      <Persons personList = {filterToShow} clickHandler = {deleteName}/>
      <Footer />
    </div>
  )
}

export default App 
